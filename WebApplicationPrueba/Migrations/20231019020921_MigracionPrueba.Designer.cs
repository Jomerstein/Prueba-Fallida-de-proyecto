// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationPrueba.Context;

#nullable disable

namespace WebApplicationPrueba.Migrations
{
    [DbContext(typeof(ForoDatabaseContext))]
    [Migration("20231019020921_MigracionPrueba")]
    partial class MigracionPrueba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplicationPrueba.Models.Entrada", b =>
                {
                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UsuarioidUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("esValida")
                        .HasColumnType("bit");

                    b.HasKey("codigo");

                    b.HasIndex("UsuarioidUsuario");

                    b.ToTable("Entrada");
                });

            modelBuilder.Entity("WebApplicationPrueba.Models.Espectaculo", b =>
                {
                    b.Property<int>("idEspectaculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEspectaculo"));

                    b.Property<int?>("UsuarioidUsuario")
                        .HasColumnType("int");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("visibilidad")
                        .HasColumnType("bit");

                    b.HasKey("idEspectaculo");

                    b.HasIndex("UsuarioidUsuario");

                    b.ToTable("Espectaculo");
                });

            modelBuilder.Entity("WebApplicationPrueba.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("WebApplicationPrueba.Models.Entrada", b =>
                {
                    b.HasOne("WebApplicationPrueba.Models.Usuario", null)
                        .WithMany("entradasUsuario")
                        .HasForeignKey("UsuarioidUsuario");
                });

            modelBuilder.Entity("WebApplicationPrueba.Models.Espectaculo", b =>
                {
                    b.HasOne("WebApplicationPrueba.Models.Usuario", null)
                        .WithMany("espectaculosUsuario")
                        .HasForeignKey("UsuarioidUsuario");
                });

            modelBuilder.Entity("WebApplicationPrueba.Models.Usuario", b =>
                {
                    b.Navigation("entradasUsuario");

                    b.Navigation("espectaculosUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
